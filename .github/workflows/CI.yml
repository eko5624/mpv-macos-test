name: CI

on:
  workflow_dispatch:
  #schedule:
  #  - cron: '0 0 * * MON'

jobs:
  build:
    runs-on: macos-11
    steps:
      - name: Checkout mpv-player/mpv
        uses: eko5624/checkout@v2
        with:
          repository: "mpv-player/mpv"
          fetch-depth: 0

      - name: Get mpv-player/mpv last version
        id: version
        run: echo "::set-output name=version::$(sh version.sh)"

      - name: Get last build version
        id: last_build
        uses: eko5624/find-latest-tag@v1.1.0
        with:
          repository: ${{ github.repository }}
          releases-only: true
        continue-on-error: true

      - name: Cancel run if last build is up to date
        if: endsWith(steps.last_build.outputs.tag, steps.version.outputs.version)
        run: exit 1

      - name: Install dependencies
        run: |
          brew update && brew upgrade
          brew install little-cms2
          brew install zlib 
          brew install libass --HEAD
          brew install luajit-openresty
          brew install libarchive       
          brew install libjpeg
          brew install libcaca
          brew install uchardet 
          brew install ffmpeg --HEAD

      - name: Build mpv
        run: |
          export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig/:$PKG_CONFIG_PATH"
          export PKG_CONFIG_PATH="/usr/local/opt/luajit-openresty/lib/pkgconfig/:$PKG_CONFIG_PATH"
          export PKG_CONFIG_PATH="/usr/local/opt/libarchive/lib/pkgconfig/:$PKG_CONFIG_PATH"
          ./bootstrap.py
          ./waf configure --swift-flags="-target arm64-apple-macos11"
          ./waf
        env:
          CFLAGS: -mmacosx-version-min=11 

      - name: Bundle mpv
        run: TOOLS/osxbundle.py build/mpv

      - name: Get mpv-player/mpv last commit SHA
        id: sha
        run: echo "::set-output name=sha::$(git log -n1 --format="%h")"

      - name: zip bundle
        run: zip -r mpv-${{ steps.version.outputs.version }}.zip mpv.app
        working-directory: build

      - name: Get current timestamp
        id: timestamp
        run: echo "::set-output name=date::$(date +%Y-%m-%d)"

      - name: Create Release
        uses: eko5624/action-gh-release@v1
        with:
          tag_name: mpv-${{ steps.version.outputs.version }}
          name: ${{ steps.timestamp.outputs.date }}
          body: Bump to mpv-player/mpv@${{ steps.sha.outputs.sha }}
          files: build/mpv-${{ steps.version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
